# Serveur
URL_BASE_MSC= # URL de base du site web, ex. http://messervices.cyber.gouv.fr
CACHE_CONTROL_FICHIERS_STATIQUES= # politique de `cache-control` sur les fichiers statiques, mettre à `no-store` ou `public, max-age=0` pour le dev. local
# SERVEUR_TRUST_PROXY = # optionnel (0 par défaut) nombre de proxies en amont du service ou configuration plus fine de trust proxy, Cf.  https://expressjs.com/en/guide/behind-proxies.html
# SERVEUR_MAX_REQUETES_PAR_MINUTE = # optionnel (600 par défaut) nombre maximum de requêtes par minute par IP
# SERVEUR_ADRESSES_IP_AUTORISEES = # Seules ces IP seront autorisées. Les autres ne seront pas servies. Séparées par des ',' s'il y en a plusieurs. Supprimer la variable d'env pour désactiver le filtrage.


# OIDC
OIDC_URL_BASE= # Adresse de base du serveur OIDC
OIDC_CLIENT_ID= # Identifiant du fournisseur de service
OIDC_CLIENT_SECRET= # Secret du fournisseur de service
SECRET_COOKIE= # Secret utilisé pour signer le cookie de session
SECRET_JWT= # Secret utilisé pour le token JWT

# MATOMO
MATOMO_ID= # ID du site déclaré dans Matomo. Laisser vide ou commenter la ligne pour ne pas utiliser Matomo
MATOMO_URL_TAG_MANAGER=# URL du `.js` du tag manager Matomo, ex. https://stats.data.gouv.fr/js/container_XXXX.js

#BASE_DONNEES
BASE_DONNEES_URL_SERVEUR= # URL du serveur de base de données, ex. postgres://user@db/msc

# SENTRY (gestionErreur)
SENTRY_DSN= # Le « DSN » du projet Sentry sur lequel envoyer les exceptions. Laisser commenté pour ne pas utiliser Sentry.
SENTRY_ENVIRONNEMENT= # L'environnement Sentry auquel seront associées les exceptions loguées, si Sentry est utilisé.

#BASE_DONNEES_JOURNAL
BASE_DONNEES_JOURNAL_EN_MEMOIRE= # `true` pour utiliser un « Journal MSC » en mémoire. Sinon le journal utilisera la base de données « BASE_DONNEES_JOURNAL_URL_SERVEUR »
BASE_DONNEES_JOURNAL_URL_SERVEUR= # URL du serveur de base de données du journal, ex. postgres://user@msc-journal-db:5432/msc-journal
BASE_DONNEES_JOURNAL_POOL_CONNEXION_MAX= # Nombre de connexions maximum à la bdd du journal

#PROFIL_ANSSI
PROFIL_ANSSI_JETON_API= # Jeton JWT généré pour MSS pour accéder à l'API MonProfilAnssi
PROFIL_ANSSI_URL_BASE= # Adresse de base du service MonProfilAnssi

#MON_AIDE_CYBER
MON_AIDE_CYBER_URL_BASE= # Adresse de base du service MonAideCyber

#BREVO
BREVO_API_URL_BASE= # URL de base de l'API Brevo
BREVO_CLE_API= # Clé d'API permettant l'envoie d'email via BREVO
BREVO_ID_TEMPLATE_BIENVENUE= # Identifiant du template d'email de bienvenue

#GOOGLE SEARCH CONSOLE
GOOGLE_SEARCH_CONSOLE_VERIFICATION= # Code de vérification de la Google Search Console. Laisser vide pour ne pas inclure la balise <meta> de vérification.

#CHIFFREMENT
CHIFFREMENT_SEL_DE_HASHAGE= # Sel à utiliser pour le hachage SHA256

# CRISP
CRISP_ID_SITE= # Id du site dans le plugin Crisp
CRISP_CLE_API= # Cle API dans le plugin Crisp
ARTICLE_PROMOUVOIR_MSC_ID= # Id de l’article Promouvoir MSC dans Crisp
ARTICLE_PROMOUVOIR_DIAGNOSTIC_CYBER_ID= # Id de l’article Promouvoir le diagnostic cyber dans Crisp

# HACHAGE
# Secrets utilisés pour le hachage de données. Les variables sont au format HACHAGE_SECRET_DE_HACHAGE_n où n est un
# nombre entier, unique, et les différentes variables d'environnement `HACHAGE_SECRET_DE_HACHAGE_n` ont
# des valeurs de n consécutives et commençant par 1
HACHAGE_SECRET_DE_HACHAGE_1= # Secret à utiliser pour le hachage HMAC
#HACHAGE_SECRET_DE_HACHAGE_2= # Second secret à utiliser pour le hachage HMAC

# Maintenance
MODE_MAINTENANCE= # 'true' pour activer le mode maintenance. Renvoi une erreur 503 et affiche une page dédiée pour toutes les requêtes
PREPARATION_MODE_MAINTENANCE= # Permet d'activer un bandeau annonçant une maintenance ce jour. Au format "Jour complet - Xh à Xh". ex: "Jeudi 5 septembre 2024 - 17h à 19h"

# Chiffrement
CHIFFREMENT_CHACHA20_CLE_HEX= # Clé à utiliser pour le chiffrement ChaCha20 en mémoire au format hexadecimal. Ex: f1e2d3c4b5a6978877665544332211ffeeddccbbaa9988776655443322110000

WEBHOOK_MATTERMOST_RETOURS_EXPERIENCE=# URL du webhook utilisé pour envoyer les retours d’expérience des utilisateurs qui quittent la demande d’aide avant de l’avoir terminée
WEBHOOK_MATTERMOST_AVIS_UTILISATEUR=# URL du webhook utilisé pour envoyer les avis des utilisateurs

# Répartition des résultats
NOMBRE_MINIMUM_DE_RESULTATS_COMPARAISON= # Le nombre minimum de resultats pour retourner une répartition au front

# Avis utilisateur
DELAI_AFFICHAGE_AVIS_UTILISATEUR= # Délai avant que ne s'affiche le CTA de demande d'avis utilisateur (en secondes)

# Financements
FINANCEMENTS_GRIST_URL= # Lien du document grist vers le référentiel des financements en cybersécurité
FINANCEMENTS_GRIST_API_KEY= # Cle API GRIST, générer une clé API en se rendant sur https://grist.numerique.gouv.fr/o/docs/account

# Feature flags
FEATURE_FLAG_FILTRES_COMPARAISON= # Active les filtres sur l’onglet comparaison
FEATURE_FLAG_AVIS_UTILISATEUR= # Active la dialogue de demande d'avis utilisateur (valeurs possibles : true | false)
